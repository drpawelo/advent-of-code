pull(calories) %>%
str_split(pattern = "NA")
View(test)
View(input_data)
View(test)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "NA",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
str_split(pattern = "NA ")
View(test)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "NA",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
str_split(pattern = " NA ")
View(test)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "NA",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
str_split(pattern = "NA ")
View(test)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories)
test[1:20]
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
str_split(pattern = "boo")
View(test)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
str_split(pattern = "boo ")
View(test)
x <- c("154", "129", "boo", "123")
str_split(x, pattern = "boo")
x <- c("a", "b", "aaaaaaaaaaa")
toString(x)
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString()
test[1:20]
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = "boo")
View(test)
test[1]
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = "boo, ")
test[1]
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = ", boo, ")
test[1]
test <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = ", boo, ") %>%
as.numeric()
list_of_elves <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = ", boo, ")
df_of_elves <- do.call(rbind.data.frame, list_of_elves)
View(df_of_elves)
df_of_elves <- data.frame(matrix(unlist(list_of_elves), nrow=length(list_of_elves), byrow=TRUE))
View(df_of_elves)
df_of_elves <- enframe(list_of_elves)
View(df_of_elves)
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe()
View(df_of_elves)
View(df_of_elves)
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe() %>%
mutate(sum_calories = sum(value))
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe() %>%
mutate(sum_calories = sum(as.numeric(value)))
View(df_of_elves)
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe()
str(df_of_elves)
View(df_of_elves)
View(list_of_elves)
View(df_of_elves)
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe() %>%
separate(col = value, sep = ", ")
?separate
# Reading in data
input_data <- read_csv(here("day1", "data.txt"), skip_empty_rows = FALSE,
col_names = c("calories"))
View(input_data)
input_data_vector <- input_data %>%
pull(calories)
input_data_vector[1:20]
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
if (is.na(current_snack)) {
elves <- c(elves, current_elf_bag)
current_elf_bag <- c()
} else {
current_elf_bag <- c(current_elf_bag, current_snack)
}
}
return(elves)
}
elf_bags <- create_elf_bags(input_data_vector)
View(elf_bags)
View(input_data)
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
View(demo_test)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
print(current_snack)
if (is.na(current_snack)) {
elves <- c(elves, current_elf_bag)
current_elf_bag <- c()
} else {
current_elf_bag <- c(current_elf_bag, current_snack)
}
}
return(elves)
}
demo_test <- create_elf_bags(demo_data)
View(demo_test)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
print(current_snack)
if (is.na(current_snack)) {
print("empty")
elves <- c(elves, current_elf_bag)
current_elf_bag <- c()
} else {
print("not empty")
current_elf_bag <- c(current_elf_bag, current_snack)
}
}
return(elves)
}
demo_test <- create_elf_bags(demo_data)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
print(current_snack)
if (is.na(current_snack)) {
print("empty")
elves <- c(elves, current_elf_bag)
current_elf_bag <- c()
} else {
print("not empty")
current_elf_bag <- c(current_elf_bag, current_snack)
}
print(elves)
}
return(elves)
}
demo_test <- create_elf_bags(demo_data)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
print(current_snack)
if (is.na(current_snack)) {
print("empty")
elves <- append(elves, current_elf_bag)
current_elf_bag <- c()
} else {
print("not empty")
current_elf_bag <- c(current_elf_bag, current_snack)
}
print(elves)
}
return(elves)
}
demo_test <- create_elf_bags(demo_data)
View(demo_test)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- list()
elves <- list()
for (current_snack in elf_collection_vector){
print(current_snack)
if (is.na(current_snack)) {
print("empty")
elves <- append(elves, current_elf_bag)
current_elf_bag <- list()
} else {
print("not empty")
current_elf_bag <- append(current_elf_bag, current_snack)
}
print(elves)
}
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
# print(current_snack)
if (is.na(current_snack)) {
# print("empty")
elves <- append(elves, current_elf_bag)
current_elf_bag <- list()
} else {
# print("not empty")
current_elf_bag <- append(current_elf_bag, current_snack)
}
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- list()
elves <- list()
for (current_snack in elf_collection_vector){
# print(current_snack)
if (is.na(current_snack)) {
# print("empty")
elves <- append(elves, current_elf_bag)
current_elf_bag <- list()
} else {
# print("not empty")
current_elf_bag <- append(current_elf_bag, current_snack)
}
# print(elves)
}
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
View(demo_test)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- list()
elves <- list()
for (current_snack in elf_collection_vector){
# print(current_snack)
if (is.na(current_snack)) {
# print("empty")
elves <- append(elves, list(current_elf_bag))
current_elf_bag <- list()
} else {
# print("not empty")
current_elf_bag <- append(current_elf_bag, current_snack)
}
# print(elves)
}
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
View(demo_test)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- list()
elves <- list()
for (current_snack in elf_collection_vector){
# print(current_snack)
if (is.na(current_snack)) {
# print("empty")
elves <- append(elves, list(current_elf_bag))
current_elf_bag <- list()
} else {
# print("not empty")
current_elf_bag <- append(current_elf_bag, current_snack)
}
# print(elves)
}
elves <- append(elves, list(current_elf_bag))
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
elf_bags <- create_elf_bags(input_data_vector)
View(elf_bags)
View(elf_bags)
df_bags <-elf_bags %>%
unlist() %>%
enframe()
View(df_bags)
df_bags <-elf_bags %>%
enframe()
View(df_bags)
enframe() %>%
mutate(sum_of_kalories = sum(values))
df_bags <-elf_bags %>%
enframe() %>%
mutate(sum_of_kalories = sum(values))
df_bags <-elf_bags %>%
enframe() %>%
mutate(sum_of_kalories = sum(value))
df_bags <-elf_bags %>%
enframe() %>%
mutate(sum_of_kalories = sum(value))
df_bags <-elf_bags %>%
enframe() %>%
mutate(sum_of_kalories = Reduce('+', value))
df_bags <-elf_bags %>%
map(sum)
df_bags <-elf_bags %>%
map(~ sum(.x))
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
if (is.na(current_snack)) {
elves <- append(elves, list(current_elf_bag))
current_elf_bag <- c()
} else {
current_elf_bag <- append(current_elf_bag, current_snack)
}
}
elves <- append(elves, list(current_elf_bag))
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
elf_bags <- create_elf_bags(input_data_vector)
View(elf_bags)
df_bags <-elf_bags %>%
map(~ sum(.x))
df_bags <-elf_bags %>%
# map(~ sum(.x))
# enframe() %>%
mutate(sum_of_kalories = Reduce('+', value))
df_bags <-elf_bags %>%
mutate(sum_of_kalories = Reduce('+', value))
elf_bags <- create_elf_bags(input_data_vector)
df_bags <-df_bags %>%
mutate(sum_of_kalories = Reduce('+', value))
df_bags <-elf_bags %>%
enframe() %>%
mutate(sum_of_kalories = Reduce('+', value))
df_bags <-elf_bags %>%
enframe()
View(df_bags)
df_bags <-elf_bags %>%
enframe() %>%
mutate(calo_sum = sum(value))
df_bags <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value))
View(df_bags)
df_bags <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value)) %>%
arrange(calo_sum)
View(df_bags)
last <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value)) %>%
arrange(calo_sum) %>%
tail(n=1)
View(last)
last <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value)) %>%
arrange(calo_sum) %>%
tail(n=1) %>%
select(calo_sum)
View(last)
# Reading in data
input_data <- read_csv(here("day1", "kasia.txt"), skip_empty_rows = FALSE,
col_names = c("calories"))
list_of_elves <- input_data %>%
mutate(calories = case_when(is.na(calories) ~ "boo",
TRUE ~ as.character(calories))) %>%
pull(calories) %>%
toString() %>%
str_split(pattern = ", boo, ")
df_of_elves <- list_of_elves %>%
unlist() %>%
enframe() %>%
separate(col = value, sep = ", ")
mutate(sum_calories = sum(as.numeric(value)))
input_data_vector <- input_data %>%
pull(calories)
create_elf_bags <- function(elf_collection_vector){
current_elf_bag <- c()
elves <- list()
for (current_snack in elf_collection_vector){
if (is.na(current_snack)) {
elves <- append(elves, list(current_elf_bag))
current_elf_bag <- c()
} else {
current_elf_bag <- append(current_elf_bag, current_snack)
}
}
elves <- append(elves, list(current_elf_bag))
return(elves)
}
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
demo_test <- create_elf_bags(demo_data)
elf_bags <- create_elf_bags(input_data_vector)
last <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value)) %>%
arrange(calo_sum) %>%
tail(n=1) %>%
select(calo_sum)
View(last)
largest3 <- df_elves %>%
tail(n=3) %>%
pull(calo_sum) %>%
sum()
df_elves <-elf_bags %>%
enframe() %>%
rowwise()  %>%
mutate(calo_sum = sum(value)) %>%
arrange(calo_sum)
largest <- df_elves %>%
tail(n=1) %>%
select(calo_sum)
largest3 <- df_elves %>%
tail(n=3) %>%
pull(calo_sum) %>%
sum()
largest3
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
df_demo <- data.frame(calory = demo_data)
demo_data <- c(1, 2, 3, NA, 4, 5, 6, NA, 7, 8)
df_demo <- data.frame(calory = demo_data)
View(df_demo)
df_demo <- df_demo %>%
mutate(more = calory + 10)
View(df_demo)
create_elf_numbers <- function(elf_collection_vector){
elf_number <- 1
all_numbers <- c()
for (current_snack in elf_collection_vector){
if (is.na(current_snack)) {
elf_number <- elf_number +1
}
all_numbers <- c(all_numbers,elf_number)
}
return(all_numbers)
}
create_elf_numbers(df_demo$calory)
create_elf_numbers <- function(elf_collection_vector){
elf_number <- 1
all_numbers <- c()
for (current_snack in elf_collection_vector){
if (is.na(current_snack)) {
elf_number <- elf_number +1
}else{
all_numbers <- c(all_numbers,elf_number)
}
}
return(all_numbers)
}
create_elf_numbers(df_demo$calory)
which_elf <- create_elf_numbers(df_demo$calory)
df_demo %>%
drop_na() %>%
mutate(which_elf = which_elf)
# Reading in data
input_data <- read_csv(here("day1", "kasia.txt"), skip_empty_rows = FALSE,
col_names = c("calories"))
which_elf <- create_elf_numbers(input_data)
View(input_data)
which_elf <- create_elf_numbers(input_data$calories)
df_demo %>%
drop_na() %>%
mutate(which_elf = which_elf)
df_demo %>%
drop_na() %>%
mutate(which_elf = which_elf_number)
input_data %>%
drop_na() %>%
mutate(which_elf = which_elf_number)
which_elf_number <- create_elf_numbers(input_data$calories)
input_data %>%
drop_na() %>%
mutate(which_elf = which_elf_number)
long_elves <- input_data %>%
drop_na() %>%
mutate(which_elf = which_elf_number)
View(long_elves)
View(input_data)
